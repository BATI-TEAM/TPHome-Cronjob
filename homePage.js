const { chromium } = require('playwright');
const H = require('./helpers');

let isRunning = false;

// Danh s√°ch URL
const urlsToVisit = [
  'https://tphomevn.com/',
  'https://tphomevn.com/gia-gach-op-lat/',
  'https://tphomevn.com/chuong-trinh-khuyen-mai-dai-le-quoc-khanh-2025/'
];

// Main crawl function
async function crawlTphomevnTask() {
  if (isRunning) {
    console.log('‚è≥ T√°c v·ª• ƒëang ch·∫°y, b·ªè qua l·∫ßn n√†y.');
    return;
  }
  isRunning = true;
  console.log('üöÄ B·∫Øt ƒë·∫ßu crawl tphomevn...');

  try {
    // Kh·ªüi ch·∫°y tr√¨nh duy·ªát v·ªõi t√πy ch·ªçn b·ªè qua l·ªói HTTPS
    const browser = await chromium.launch({ 
      headless: true,
      ignoreHTTPSErrors: true // B·ªè qua l·ªói ch·ª©ng ch·ªâ SSL
    });
    const context = await browser.newContext({
      ignoreHTTPSErrors: true // C≈©ng ƒë·∫∑t ·ªü c·∫•p context
    });
    let page = await context.newPage(); // S·ª≠ d·ª•ng context ƒë·ªÉ t·∫°o page

    for (const startUrl of urlsToVisit) {
      console.log(`üåê T·ªõi trang: ${startUrl}`);
      page = await H.clickLinkByUrl(page, startUrl);

      // Th·ªùi gian d·ª´ng ng·∫´u nhi√™n 15‚Äì20s
      const timePerPage = H.getRandomInt(15000, 20000);
      console.log(`‚è± D·ª´ng tr√™n trang ch√≠nh: ${timePerPage / 1000}s`);
      await page.waitForTimeout(timePerPage);

      // L·∫•y t·∫•t c·∫£ link n·ªôi b·ªô v√† random 2‚Äì3 link ƒë·ªÉ click
      const links = await H.getInternalTphomevnLinks(page, startUrl);
      const linksToClick = links.sort(() => 0.5 - Math.random()).slice(0, H.getRandomInt(2, 3));

      for (const link of linksToClick) {
        console.log(`üîó Click v√†o: ${link}`);
        page = await H.clickLinkByUrl(page, link);

        const waitTime = H.getRandomInt(10000, 20000);
        console.log(`‚è± D·ª´ng sau click: ${waitTime / 1000}s`);
        await page.waitForTimeout(waitTime);
      }
    }

    console.log('‚úÖ Ho√†n t·∫•t l∆∞·ª£t crawl t·∫•t c·∫£ URLs.');
    await browser.close();
  } catch (err) {
    console.error('‚ùå L·ªói crawl:', err);
  } finally {
    isRunning = false;
  }
}

// Gi·∫£ l·∫≠p cron job 5 ph√∫t
setInterval(crawlTphomevnTask, 5 * 60 * 1000);

// Ch·∫°y ngay l·∫ßn ƒë·∫ßu
crawlTphomevnTask();
